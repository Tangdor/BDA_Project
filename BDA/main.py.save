from apds9960.const import *
from apds9960 import APDS9960
import RPi.GPIO as GPIO
import smbus
from time import sleep
import math
import time
import datetime
from demo_opts import get_device
from luma.core.render import canvas
from KY040.KY040 import KY040
import os
from PIL import Image
from PIL import ImageDraw
from PIL import ImageFont
from luim = Image.open("/home/pi/BDA/train128x128.jpg")
            #image = Image.new('RGB', (frameSize), 'white')
            #font = ImageFont.truetype("FreeMonoBold.ttf", 12, encoding="unic")
            draw = ImageDraw.Draw(im)ma.core.interface.serial import spi
from luma.oled.device import ssd1351
import sys

serial= spi(device=0, port=0)
device = ssd1351(serial)

frameSize = (128,128)
counterPictures = 0;
oldState = True


port = 1
bus = smbus.SMBus(port)

apds = APDS9960(bus)

def rotaryChange(direction):
    return direction

def switchPressed(status):
     return status
def switch_pictures(counterPictures):
 switcher = {
    1: 

def main():
 dirs = {
    APDS9960_DIR_NONE: "none",
    APDS9960_DIR_LEFT: "left",
    APDS9960_DIR_RIGHT: "right",
    APDS9960_DIR_UP: "up",
    APDS9960_DIR_DOWN: "down",
    APDS9960_DIR_NEAR: "near",
    APDS9960_DIR_FAR: "far",
 }
 try:
     while True:
            if rotaryChange(direction) == 0:
             if counterPictures > 0:
              counterPictures--
              oldState = False
             else:
              counterPictures = 1
            elif: rotaryChange(direction) == 1:
             if counterPictures < 1:
              counterPictures++
              oldState = False
             else:
              counterPictures = 0
              oldState = False
            if !oldState:
             switch 














            im = Image.open("/home/pi/BDA/train128x128.jpg")
            #image = Image.new('RGB', (frameSize), 'white')
            #font = ImageFont.truetype("FreeMonoBold.ttf", 12, encoding="unic")
            draw = ImageDraw.Draw(im)
            draw.rectangle((10, 10, 30, 30), outline="white", fill="blue")

            #draw.rectangle([(1,1), (frameSize[0]-2,frameSize[1]-2)], 'black', 'white')
            #draw.text((5, 5), 'Hello World', fill='white', font=font)
            device.display(im)
            #im.show()
            apds.setProximityIntLowThreshold(50)
            apds.setGestureGain(0)

            apds.enableGestureSensor()
            sleep(5)

 finally:
    ky040.stop()
    GPIO.cleanup()
    print("Bye")



if __name__ == "__main__":
    try:
        print("hello world, im the BDA")
        device = get_device()
        CLOCKPIN = 5
        DATAPIN = 6
        SWITCHPIN = 13

        GPIO.setmode(GPIO.BCM)

        ky040 = KY040(CLOCKPIN, DATAPIN, SWITCHPIN, rotaryChange, switchPressed)

        ky040.start()
        main()
    except KeyboardInterrupt:
        pass
